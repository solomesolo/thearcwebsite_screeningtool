<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Right Screening Finder - Health Assessment</title>
    <style>
        /* Reset and Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        html, body {
            background: linear-gradient(135deg, #0a0a0a 0%, #1a1a1a 50%, #0f0f0f 100%);
            color: #ffffff;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            line-height: 1.6;
            min-height: 100vh;
            overflow-x: hidden;
        }
        
        /* Layout Structure */
        .container {
            display: flex;
            min-height: 100vh;
        }
        
        /* Sidebar */
        .sidebar {
            width: 350px;
            background: rgba(26, 26, 26, 0.95);
            border-right: 1px solid rgba(255, 255, 255, 0.1);
            padding: 2rem;
            display: flex;
            flex-direction: column;
            gap: 2rem;
        }
        
        .sidebar-header h2 {
            color: #ffffff;
            font-size: 1.5rem;
            font-weight: 600;
            margin: 0;
            text-align: center;
        }
        
        /* Progress Bar */
        .progress-container {
            background: #2a2a2a;
            border-radius: 12px;
            padding: 1.5rem;
            text-align: center;
        }
        
        .progress-bar {
            width: 100%;
            height: 8px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 4px;
            overflow: hidden;
            margin-bottom: 1rem;
        }
        
        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
            width: 0%;
            transition: width 0.3s ease;
        }
        
        .progress-text {
            color: #ffffff;
            font-size: 1rem;
            font-weight: 600;
        }
        
        /* Section Navigation */
        .section-nav {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }
        
        .section-link {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1rem 1.5rem;
            background: #2a2a2a;
            border-radius: 12px;
            text-decoration: none;
            color: #ffffff;
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }
        
        .section-link:hover {
            background: #3a3a3a;
            transform: translateX(5px);
        }
        
        .section-link.active {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-color: rgba(255, 255, 255, 0.2);
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }
        
        .section-number {
            background: rgba(255, 255, 255, 0.2);
            color: #ffffff;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            font-size: 0.9rem;
        }
        
        .section-link.active .section-number {
            background: rgba(255, 255, 255, 0.3);
        }
        
        .section-title {
            font-size: 0.95rem;
            font-weight: 500;
            line-height: 1.4;
        }
        
        /* Main Content */
        .main-content {
            flex: 1;
            padding: 2rem;
            overflow-y: auto;
        }
        
        .section {
            display: none;
        }
        
        .section.active {
            display: block;
        }
        
        .section-header {
            margin-bottom: 3rem;
        }
        
        .section-header h1 {
            color: #667eea;
            font-size: 2.5rem;
            font-weight: 700;
            margin: 0 0 1rem 0;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .section-header p {
            color: #b0b0b0;
            font-size: 1.1rem;
            line-height: 1.6;
            margin: 0;
        }
        
        /* Questions */
        .questions-container {
            display: flex;
            flex-direction: column;
            gap: 2.5rem;
        }
        
        .question {
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 16px;
            padding: 2rem;
            transition: all 0.3s ease;
        }
        
        .question:hover {
            background: rgba(255, 255, 255, 0.08);
            border-color: rgba(255, 255, 255, 0.15);
        }
        
        .question h3 {
            color: #ffffff;
            font-size: 1.3rem;
            font-weight: 600;
            margin: 0 0 1.5rem 0;
        }
        
        /* Options */
        .options {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }
        
        .option {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1rem 1.5rem;
            background: #2a2a2a;
            border: 2px solid rgba(255, 255, 255, 0.1);
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .option:hover {
            background: #3a3a3a;
            border-color: rgba(255, 255, 255, 0.2);
        }
        
        .option.selected {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-color: rgba(255, 255, 255, 0.3);
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }
        
        .option input[type="radio"] {
            width: 20px;
            height: 20px;
            accent-color: #667eea;
        }
        
        .option-text {
            color: #ffffff;
            font-size: 1rem;
            font-weight: 500;
        }
        
        /* Input Fields */
        .question input[type="text"],
        .question input[type="number"],
        .question input[type="email"],
        .question textarea {
            width: 100%;
            padding: 1rem 1.5rem;
            background: #2a2a2a;
            border: 2px solid rgba(255, 255, 255, 0.1);
            border-radius: 12px;
            color: #ffffff;
            font-size: 1rem;
            box-sizing: border-box;
            transition: all 0.3s ease;
        }
        
        .question input[type="text"]:focus,
        .question input[type="number"]:focus,
        .question input[type="email"]:focus,
        .question textarea:focus {
            outline: none;
            border-color: #667eea;
            background: rgba(255, 255, 255, 0.08);
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }
        
        .question input::placeholder,
        .question textarea::placeholder {
            color: #b0b0b0;
            font-style: italic;
        }
        
        .question textarea {
            min-height: 120px;
            resize: vertical;
        }
        
        /* Navigation Buttons */
        .navigation-buttons {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 3rem;
            padding-top: 2rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .nav-btn {
            padding: 1rem 2rem;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            min-width: 120px;
        }
        
        .prev-btn {
            background: #2a2a2a;
            color: #b0b0b0;
            border: 2px solid rgba(255, 255, 255, 0.1);
        }
        
        .prev-btn:hover:not(:disabled) {
            background: #3a3a3a;
            color: #ffffff;
            border-color: rgba(255, 255, 255, 0.2);
        }
        
        .prev-btn:disabled {
            background: #1a1a1a;
            color: #666666;
            cursor: not-allowed;
            border-color: rgba(255, 255, 255, 0.05);
        }
        
        .next-btn {
            background: #4a4a4a;
            color: #ffffff;
            border: 2px solid rgba(255, 255, 255, 0.2);
        }
        
        .next-btn:hover {
            background: #5a5a5a;
            border-color: rgba(255, 255, 255, 0.3);
        }
        
        .next-btn[style*="background: linear-gradient(135deg, #10b981 0%, #059669 100%)"] {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%) !important;
            border-color: rgba(255, 255, 255, 0.3);
        }
        
        /* Responsive Design */
        @media (max-width: 768px) {
            .container {
                flex-direction: column;
            }
            
            .sidebar {
                width: 100%;
                padding: 1rem;
            }
            
            .main-content {
                padding: 1rem;
            }
            
            .section-header h1 {
                font-size: 2rem;
            }
            
            .navigation-buttons {
                flex-direction: column;
                gap: 1rem;
            }
            
            .nav-btn {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="sidebar-header">
                <h2>Assessment Sections</h2>
            </div>
            
            <!-- Progress Bar -->
            <div class="progress-container">
                <div class="progress-bar">
                    <div class="progress-fill" id="progressFill"></div>
                </div>
                <div class="progress-text" id="progressText">0% Complete</div>
            </div>
            
            <!-- Section Navigation -->
            <div class="section-nav">
                <a href="#" class="section-link active" data-section="demographics">
                    <span class="section-number">1</span>
                    <span class="section-title">General Health & Demographics</span>
                </a>
                <a href="#" class="section-link" data-section="lifestyle">
                    <span class="section-number">2</span>
                    <span class="section-title">Lifestyle & Risk Factors</span>
                </a>
                <a href="#" class="section-link" data-section="symptoms">
                    <span class="section-number">3</span>
                    <span class="section-title">Current Symptoms & Clinical Clues</span>
                </a>
                <a href="#" class="section-link" data-section="screenings">
                    <span class="section-number">4</span>
                    <span class="section-title">History of Health Screenings</span>
                </a>
                <a href="#" class="section-link" data-section="additional">
                    <span class="section-number">5</span>
                    <span class="section-title">Additional Information</span>
                </a>
            </div>
        </div>
        
        <!-- Main Content -->
        <div class="main-content">
            <!-- Demographics Section -->
            <div id="demographics" class="section active">
                <div class="section-header">
                    <h1>General Health & Demographics</h1>
                    <p>Let's start with some basic information about your health profile.</p>
                </div>
                
                <div class="questions-container">
                    <!-- Question 1: Age -->
                    <div class="question">
                        <h3>1. What is your age?</h3>
                        <div class="options">
                            <label class="option">
                                <input type="radio" name="age" value="under_18">
                                <span class="option-text">Under 18</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="age" value="18_25">
                                <span class="option-text">18-25</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="age" value="26_35">
                                <span class="option-text">26-35</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="age" value="36_45">
                                <span class="option-text">36-45</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="age" value="46_55">
                                <span class="option-text">46-55</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="age" value="56_65">
                                <span class="option-text">56-65</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="age" value="66_75">
                                <span class="option-text">66-75</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="age" value="over_75">
                                <span class="option-text">Over 75</span>
                            </label>
                        </div>
                    </div>
                    
                    <!-- Question 2: Gender -->
                    <div class="question">
                        <h3>2. What is your gender?</h3>
                        <div class="options">
                            <label class="option">
                                <input type="radio" name="gender" value="male">
                                <span class="option-text">Male</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="gender" value="female">
                                <span class="option-text">Female</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="gender" value="other">
                                <span class="option-text">Other</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="gender" value="prefer_not_to_say">
                                <span class="option-text">Prefer not to say</span>
                            </label>
                        </div>
                    </div>
                    
                    <!-- Question 3: Height -->
                    <div class="question">
                        <h3>3. What is your height?</h3>
                        <input type="text" name="height" placeholder="Enter height in cm or ft/inches (e.g., 175 cm or 5'9&quot;)">
                    </div>
                    
                    <!-- Question 4: Weight -->
                    <div class="question">
                        <h3>4. What is your weight?</h3>
                        <input type="text" name="weight" placeholder="Enter weight in kg or lbs (e.g., 70 kg or 154 lbs)">
                    </div>
                    
                    <!-- Question 5: Overall Health -->
                    <div class="question">
                        <h3>5. How would you describe your overall health?</h3>
                        <div class="options">
                            <label class="option">
                                <input type="radio" name="overall_health" value="excellent">
                                <span class="option-text">Excellent</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="overall_health" value="very_good">
                                <span class="option-text">Very Good</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="overall_health" value="good">
                                <span class="option-text">Good</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="overall_health" value="fair">
                                <span class="option-text">Fair</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="overall_health" value="poor">
                                <span class="option-text">Poor</span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Lifestyle Section -->
            <div id="lifestyle" class="section">
                <div class="section-header">
                    <h1>Lifestyle & Risk Factors</h1>
                    <p>Tell us about your lifestyle and potential health risk factors.</p>
                </div>
                <div class="questions-container">
                    <div class="question">
                        <h3>1. Do you smoke or use tobacco products?</h3>
                        <div class="options">
                            <label class="option">
                                <input type="radio" name="smoking" value="never">
                                <span class="option-text">Never</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="smoking" value="former">
                                <span class="option-text">Former smoker</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="smoking" value="current">
                                <span class="option-text">Current smoker</span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Symptoms Section -->
            <div id="symptoms" class="section">
                <div class="section-header">
                    <h1>Current Symptoms & Clinical Clues</h1>
                    <p>Please describe any current symptoms or health concerns.</p>
                </div>
                <div class="questions-container">
                    <div class="question">
                        <h3>1. Are you currently experiencing any symptoms?</h3>
                        <div class="options">
                            <label class="option">
                                <input type="radio" name="current_symptoms" value="none">
                                <span class="option-text">No symptoms</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="current_symptoms" value="mild">
                                <span class="option-text">Mild symptoms</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="current_symptoms" value="moderate">
                                <span class="option-text">Moderate symptoms</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="current_symptoms" value="severe">
                                <span class="option-text">Severe symptoms</span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Screenings Section -->
            <div id="screenings" class="section">
                <div class="section-header">
                    <h1>History of Health Screenings</h1>
                    <p>Tell us about your health screening history and test results.</p>
                </div>
                <div class="questions-container">
                    <div class="question">
                        <h3>1. When was your last comprehensive health checkup?</h3>
                        <div class="options">
                            <label class="option">
                                <input type="radio" name="last_checkup" value="within_year">
                                <span class="option-text">Within the past year</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="last_checkup" value="1_2_years">
                                <span class="option-text">1-2 years ago</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="last_checkup" value="2_5_years">
                                <span class="option-text">2-5 years ago</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="last_checkup" value="over_5_years">
                                <span class="option-text">Over 5 years ago</span>
                            </label>
                            <label class="option">
                                <input type="radio" name="last_checkup" value="never">
                                <span class="option-text">Never</span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Additional Section -->
            <div id="additional" class="section">
                <div class="section-header">
                    <h1>Additional Information</h1>
                    <p>Any additional information that might be relevant to your health assessment.</p>
                </div>
                <div class="questions-container">
                    <div class="question">
                        <h3>1. Do you have any additional comments or concerns?</h3>
                        <textarea name="additional_comments" placeholder="Please share any additional information..."></textarea>
                    </div>
                </div>
            </div>
            
            <!-- Navigation Buttons -->
            <div class="navigation-buttons">
                <button id="prevBtn" class="nav-btn prev-btn" disabled>Previous</button>
                <button id="nextBtn" class="nav-btn next-btn">Next</button>
            </div>
        </div>
    </div>

    <script>
        // ========================================
        // ELEGANT QUESTIONNAIRE FUNCTIONALITY
        // ========================================
        
        // Global variables
        let currentSectionIndex = 0;
        const sections = ["demographics", "lifestyle", "symptoms", "screenings", "additional"];
        let formData = {};
        
        // Initialize everything when page loads
        document.addEventListener("DOMContentLoaded", function() {
            console.log("Elegant questionnaire initializing...");
            initializeQuestionnaire();
        });
        
        function initializeQuestionnaire() {
            console.log("Setting up elegant questionnaire...");
            
            // Set up section navigation
            setupSectionNavigation();
            
            // Set up form interactions
            setupFormInteractions();
            
            // Set up navigation buttons
            setupNavigationButtons();
            
            // Show first section
            showSection(0);
            
            // Update progress
            updateProgress();
            
            console.log("Elegant questionnaire initialized successfully");
        }
        
        function setupSectionNavigation() {
            const sectionLinks = document.querySelectorAll(".section-link");
            sectionLinks.forEach((link, index) => {
                link.addEventListener("click", function(e) {
                    e.preventDefault();
                    const sectionName = this.getAttribute("data-section");
                    const sectionIndex = sections.indexOf(sectionName);
                    if (sectionIndex !== -1) {
                        showSection(sectionIndex);
                    }
                });
            });
        }
        
        function setupFormInteractions() {
            // Handle radio buttons and checkboxes
            document.querySelectorAll("input[type=\"radio\"], input[type=\"checkbox\"]").forEach(input => {
                input.addEventListener("change", function() {
                    handleInputChange(this);
                });
            });
            
            // Handle text inputs and textareas
            document.querySelectorAll("input[type=\"text\"], input[type=\"number\"], input[type=\"email\"], textarea, select").forEach(input => {
                input.addEventListener("input", function() {
                    handleInputChange(this);
                });
                input.addEventListener("change", function() {
                    handleInputChange(this);
                });
            });
            
            // Handle option clicks
            document.querySelectorAll(".option").forEach(option => {
                option.addEventListener("click", function() {
                    const input = this.querySelector("input");
                    if (input) {
                        input.checked = true;
                        handleInputChange(input);
                    }
                });
            });
        }
        
        function setupNavigationButtons() {
            const prevBtn = document.getElementById("prevBtn");
            const nextBtn = document.getElementById("nextBtn");
            
            if (prevBtn) {
                prevBtn.addEventListener("click", function() {
                    if (currentSectionIndex > 0) {
                        showSection(currentSectionIndex - 1);
                    }
                });
            }
            
            if (nextBtn) {
                nextBtn.addEventListener("click", function() {
                    if (currentSectionIndex < sections.length - 1) {
                        showSection(currentSectionIndex + 1);
                    } else {
                        submitForm();
                    }
                });
            }
        }
        
        function showSection(index) {
            console.log("Showing section:", index, sections[index]);
            
            // Hide all sections
            document.querySelectorAll(".section").forEach(section => {
                section.classList.remove("active");
                section.style.display = "none";
            });
            
            // Show target section
            const targetSection = document.getElementById(sections[index]);
            if (targetSection) {
                targetSection.style.display = "block";
                targetSection.classList.add("active");
                currentSectionIndex = index;
                updateNavigationButtons();
                updateSectionLinks();
                updateProgress();
            }
        }
        
        function updateNavigationButtons() {
            const prevBtn = document.getElementById("prevBtn");
            const nextBtn = document.getElementById("nextBtn");
            
            if (prevBtn) {
                prevBtn.disabled = currentSectionIndex === 0;
                prevBtn.style.display = currentSectionIndex > 0 ? "inline-block" : "none";
            }
            
            if (nextBtn) {
                if (currentSectionIndex === sections.length - 1) {
                    nextBtn.textContent = "Submit Assessment";
                    nextBtn.style.background = "linear-gradient(135deg, #10b981 0%, #059669 100%)";
                } else {
                    nextBtn.textContent = "Next";
                    nextBtn.style.background = "#4a4a4a";
                }
                nextBtn.style.display = "inline-block";
            }
        }
        
        function updateSectionLinks() {
            document.querySelectorAll(".section-link").forEach(link => {
                link.classList.remove("active");
                const sectionName = link.getAttribute("data-section");
                if (sectionName === sections[currentSectionIndex]) {
                    link.classList.add("active");
                }
            });
        }
        
        function handleInputChange(input) {
            console.log("Input changed:", input.name, input.value, input.checked);
            
            // Save the value
            if (input.type === "radio" || input.type === "checkbox") {
                if (input.checked) {
                    if (input.type === "checkbox") {
                        if (!formData[input.name]) {
                            formData[input.name] = [];
                        }
                        if (!formData[input.name].includes(input.value)) {
                            formData[input.name].push(input.value);
                        }
                    } else {
                        formData[input.name] = input.value;
                    }
                } else if (input.type === "checkbox") {
                    if (formData[input.name] && Array.isArray(formData[input.name])) {
                        formData[input.name] = formData[input.name].filter(v => v !== input.value);
                        if (formData[input.name].length === 0) {
                            delete formData[input.name];
                        }
                    }
                }
            } else {
                if (input.value.trim() !== "") {
                    formData[input.name] = input.value;
                } else {
                    delete formData[input.name];
                }
            }
            
            // Update visual state
            updateOptionVisualState(input);
            
            // Update progress
            updateProgress();
            
            // Save to localStorage
            saveFormData();
        }
        
        function updateOptionVisualState(input) {
            if (input.type === "radio" || input.type === "checkbox") {
                const option = input.closest(".option");
                if (option) {
                    // Remove selected class from all options in the same group
                    const name = input.name;
                    document.querySelectorAll(`input[name="${name}"]`).forEach(radio => {
                        const radioOption = radio.closest(".option");
                        if (radioOption) {
                            radioOption.classList.remove("selected");
                        }
                    });
                    
                    // Add selected class to current option
                    if (input.checked) {
                        option.classList.add("selected");
                    }
                }
            }
        }
        
        function updateProgress() {
            let answeredQuestions = 0;
            const totalQuestions = document.querySelectorAll("input[type=\"radio\"], input[type=\"checkbox\"], input[type=\"text\"], input[type=\"number\"], input[type=\"email\"], textarea, select").length;
            
            // Count answered questions
            document.querySelectorAll("input[type=\"radio\"]:checked, input[type=\"checkbox\"]:checked").forEach(input => {
                answeredQuestions++;
            });
            
            document.querySelectorAll("input[type=\"text\"], input[type=\"number\"], input[type=\"email\"], textarea, select").forEach(input => {
                if (input.value.trim() !== "") {
                    answeredQuestions++;
                }
            });
            
            const progress = totalQuestions > 0 ? (answeredQuestions / totalQuestions) * 100 : 0;
            
            // Update progress bar
            const progressFill = document.getElementById("progressFill");
            const progressText = document.getElementById("progressText");
            
            if (progressFill) {
                progressFill.style.width = progress + "%";
            }
            if (progressText) {
                progressText.textContent = Math.round(progress) + "% Complete";
            }
            
            console.log("Progress:", Math.round(progress) + "%", "(" + answeredQuestions + "/" + totalQuestions + ")");
        }
        
        function saveFormData() {
            try {
                localStorage.setItem("questionnaireData", JSON.stringify(formData));
            } catch (error) {
                console.error("Error saving form data:", error);
            }
        }
        
        function loadFormData() {
            try {
                const saved = localStorage.getItem("questionnaireData");
                if (saved) {
                    formData = JSON.parse(saved);
                    
                    // Restore form values
                    Object.keys(formData).forEach(name => {
                        const value = formData[name];
                        const inputs = document.querySelectorAll(`[name="${name}"]`);
                        
                        inputs.forEach(input => {
                            if (input.type === "radio" || input.type === "checkbox") {
                                if (Array.isArray(value)) {
                                    input.checked = value.includes(input.value);
                                } else {
                                    input.checked = input.value === value;
                                }
                            } else {
                                input.value = value;
                            }
                        });
                    });
                    
                    // Update visual states
                    document.querySelectorAll("input[type=\"radio\"]:checked, input[type=\"checkbox\"]:checked").forEach(input => {
                        updateOptionVisualState(input);
                    });
                }
            } catch (error) {
                console.error("Error loading form data:", error);
            }
        }
        
        function submitForm() {
            console.log("Submitting form...", formData);
            
            // Create FormData object
            const submitData = new FormData();
            Object.keys(formData).forEach(key => {
                const value = formData[key];
                if (Array.isArray(value)) {
                    value.forEach(v => submitData.append(key, v));
                } else {
                    submitData.append(key, value);
                }
            });
            
            // Submit to backend
            fetch("/api/analyze-health", {
                method: "POST",
                body: submitData
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Network response was not ok");
                }
                return response.json();
            })
            .then(data => {
                console.log("Form submitted successfully:", data);
                // Clear saved data
                localStorage.removeItem("questionnaireData");
                // Redirect to results
                window.location.href = "/results.html";
            })
            .catch(error => {
                console.error("Error submitting form:", error);
                alert("There was an error submitting your assessment. Please try again.");
            });
        }
        
        // Load saved data when page loads
        document.addEventListener("DOMContentLoaded", function() {
            loadFormData();
        });
    </script>
</body>
</html>
